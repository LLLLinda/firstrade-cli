#!/usr/bin/env node
(async () => {
    'use strict';
    const msg = `
usage: firstrade [command]

command:
    login
    getBalance
    getTradeHistory
    getPosition
    getSessionTimeLeft

argument:
    --username=username             (required)
    --password=password             (required)
    --pin=pin                       (required)
    --cookies=cookies               (optional)
    `;
    const re = /(?:--(\w+)="?(\S+)"?)/;
    const command = process.argv.find(x => ["login", "getBalance", "getTradeHistory", "getPosition", "getSessionTimeLeft"].includes(x))
    let argument = readCredential(re);
    if (command == null || process.argv.includes('-h') || process.argv.includes('--help')) {
        console.log(msg)
    } else {
        const firstrade = require('../index.js')
        let result = await firstrade[command](argument)
        if (command == "login")
            console.log(JSON.stringify(result).replace(/"/, `\\"`))
        else
            console.log(JSON.stringify(result))
    }
})()

function readCredential(re) {
    const argument = process.argv.filter(x => re.test(x)).map(arg => (re.exec(arg) || []).splice(1, 2));
    let ret = Object.fromEntries(argument);
    ret = Object.assign({
        username: process.env.FIRSTRADE_USERNAME,
        password: process.env.FIRSTRADE_PASSWORD,
        pin: process.env.FIRSTRADE_PIN
    }, ret);
    return ret;
}
